name: Docker Image CI prod

on:
  workflow_call:
    inputs:
      REPOSITORY:
        description: 'repository name'
        required: true
        type: string
      AWS_REGION:
        description: 'aws region'
        required: true
        type: string
      ARGOCD_BRANCH:
        description: 'argocd branch'
        required: true
        type: string
      PATH:
        description: "argocd path"
        required: true
        type: string
    secrets:
      ROLE:
        description: 'AWS role for images push on ecr registry'
        required: true
      TOKO:
        description: 'token for github actions'
        required: true
      
permissions:
  id-token: read   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout

jobs:
  deploy-peermarket-web:
    runs-on: ubuntu-latest
    # permissions: write-all
    steps:
          - name: Check out repository
            uses: actions/checkout@v4
              
          - name: configure aws credentials
            uses: aws-actions/configure-aws-credentials@v4
            with:
              audience: sts.amazonaws.com.cn
              role-to-assume: ${{ secrets.ROLE }}
              aws-region: ${{ inputs.AWS_REGION }}
    
          - name: Login to Amazon ECR
            id: login-ecr
            uses: aws-actions/amazon-ecr-login@v2

#############          
# Build Image
#############
          - name: Build, tag, and push docker image to Amazon ECR
            env:
              REGISTRY: ${{ steps.login-ecr.outputs.registry }}
              REPOSITORY: ${{ inputs.REPOSITORY }}
              IMAGE_TAG: ${{ github.sha  }}
            run: |
              SHORT_SHA=$(echo "${IMAGE_TAG}" | cut -c1-7)
              docker build --no-cache -t $REGISTRY/$REPOSITORY:$SHORT_SHA .
              docker push $REGISTRY/$REPOSITORY:$SHORT_SHA  
              echo "REGISTRY=$REGISTRY" >> $GITHUB_ENV
              echo "REPOSITORY=$REPOSITORY" >> $GITHUB_ENV
              echo "IMAGE_TAG=$SHORT_SHA" >> $GITHUB_ENV

################         
# Update argocd
################
          - name: "Update image tag in argocd repository"
            uses: actions/checkout@v4
            with:
              repository: 'ajaykumar1007/argocd'
              ref: ${{ inputs.ARGOCD_BRANCH }}
              token: ${{ secrets.TOKO }}
            env:
              REGISTRY: ${{ steps.login-ecr.outputs.registry }}
              REPOSITORY: ${{ inputs.REPOSITORY }}
          - run: |
              git config user.name github-actions
              git config user.email github-actions@github.com 
              cd ${{ inputs.PATH }}
              image_url=$(sed -n 's/.*\(image:\)/\1/p' nginx.yaml|cut -d' ' -f2)
              sed  -i s+${image_url}+$REGISTRY/$REPOSITORY:$IMAGE_TAG+g nginx.yaml
              git add .
              git commit -m "image update"
              git push origin 
