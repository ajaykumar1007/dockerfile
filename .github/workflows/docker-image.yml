name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout

jobs:

  build:

    runs-on: ubuntu-latest
    steps:
          - name: Check out repository
            uses: actions/checkout@v4

          - name: Set variable based on branch
            run: |
              if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
              echo "REGION=us-west-1" >> $GITHUB_ENV
              elif [[ "${{ github.ref }}" == "refs/heads/test" ]]; then
              echo "REGION=us-west-1" >> $GITHUB_ENV
              else
                echo "Unsupported branch."
                exit 1
              fi
              
          - name: configure aws credentials
            uses: aws-actions/configure-aws-credentials@v4
            with:
              role-to-assume: ${{ secrets.ROLE }}
              aws-region: ${{ env.REGION }}
    
          - name: Login to Amazon ECR
            id: login-ecr
            uses: aws-actions/amazon-ecr-login@v2

          - name: Build, tag, and push docker image to Amazon ECR
            env:
              REGISTRY: ${{ steps.login-ecr.outputs.registry }}
              REPOSITORY: ${{ secrets.REPOSITORY }}
              IMAGE_TAG: ${{ github.sha  }}
            run: |
              SHORT_SHA=$(echo "${IMAGE_TAG}" | cut -c1-7)
              # docker build --no-cache -t $REGISTRY/$REPOSITORY:$SHORT_SHA .
              # docker push $REGISTRY/$REPOSITORY:$SHORT_SHA
              echo "REGISTRY=$REGISTRY" >> $GITHUB_ENV
              echo "REPOSITORY=$REPOSITORY" >> $GITHUB_ENV
              echo "IMAGE_TAG=$SHORT_SHA" >> $GITHUB_ENV

          - uses: actions/checkout@v4
            with:
              repository: 'ajaykumar1007/argocd'
              ref: 'stage'
              token: ${{ secrets.TOKO }}
            env:
              REGISTRY: ${{ steps.login-ecr.outputs.registry }}
              REPOSITORY: ${{ secrets.REPOSITORY }}
          - run: |
              echo "$REGISTRY ***** $REPOSITORY ***** $IMAGE_TAG"
              ls -l 
              git config user.name github-actions
              git config user.email github-actions@github.com 
              cd stage
              ls -la 
              image_url=$(sed -n 's/.*\(image:\)/\1/p' nginx.yaml|cut -d' ' -f2)
              sed  -i s+${image_url}+$REGISTRY/$REPOSITORY:$IMAGE_TAG+g nginx.yaml
              git add .
              git commit -m "generated"
              git push
